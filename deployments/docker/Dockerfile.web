# Dockerfile.web
# ---------- Build stage ----------
FROM node:20-alpine AS webbuilder
WORKDIR /app

# Salin file dependency dulu (agar cache build maksimal)
COPY web/package*.json ./web/
WORKDIR /app/web
# Kalau ada package-lock.json → npm ci; kalau tidak → npm install
RUN [ -f package-lock.json ] && npm ci --no-audit --no-fund || npm install --no-audit --no-fund

# Salin source & build
COPY web/ /app/web/
ARG VITE_API_BASE=/api
ENV VITE_API_BASE=${VITE_API_BASE}
RUN npm run build

# ---------- Runtime stage ----------
FROM nginx:1.27-alpine AS webruntime
# Copy build output to nginx html
COPY --from=webbuilder /app/web/dist/ /usr/share/nginx/html
# Basic nginx config (SPA history fallback)
RUN printf 'server {\n  listen 80;\n  server_name _;\n  root /usr/share/nginx/html;\n  location / {\n    try_files $uri /index.html;\n  }\n}\n' > /etc/nginx/conf.d/default.conf
EXPOSE 80
